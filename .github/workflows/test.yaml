name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Set up environment variables
      run: |
        echo "DB_USER=test_user" >> $GITHUB_ENV
        echo "DB_PASS=test_password" >> $GITHUB_ENV
        echo "DB_HOST=localhost" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DB_NAME=test_db" >> $GITHUB_ENV
    - name: Wait for PostgreSQL to be ready
      run: sleep 5
    - name: Run tests
      run: |
        python -m pytest -v --asyncio-mode=auto --cov=./src --cov-branch --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
        file: ./coverage.xml
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
      with:
        args: >
          -Dsonar.organization=a-ulianov
          -Dsonar.projectKey=a-ulianov_sqlalchemy-async-boilerplate
          -Dsonar.sources=src/
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.version=3.11
